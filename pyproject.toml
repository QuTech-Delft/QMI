[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=75", "wheel", "setuptools_scm>=8"]

[project.urls]
Homepage = "https://github.com/QuTech-Delft/QMI"
Repository = "https://github.com/QuTech-Delft/QMI.git"
Changelog = "https://github.com/QuTech-Delft/QMI/blob/stable-0-49/CHANGELOG.md"
Issues = "https://github.com/QuTech-Delft/QMI/issues"

[project]
name="qmi"
version="0.49.0"
description="The Quantum Measurement Infrastructure framework"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE.md"}
authors=[{name = "QuTech", email="F.J.Grooteman@tudelft.nl"}]
requires-python=">=3.11, <4"
classifiers=[
    # complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: Unix",
    "Operating System :: POSIX",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Scientific/Engineering :: Physics",
    "Natural Language :: English",
]
keywords=["qmi", "hardware", "software", "interface", "laboratory", "physics"]
dependencies = [
    # For generating an installable package and deploying
    "setuptools",
    "wheel",
    "twine",
    # For scientific data processing and visualisation
    "numpy",
    "scipy",
    "h5py>=3.7.0",
    # For hardware interfacing
    "pyserial",
    "pyusb",
    "python-vxi11",
    # For miscellaneous functionality
    "pytz",
    "psutil",
    "colorama",
    "jsonschema",
    # Instrument AD2
    "pydwf",
]

[project.optional-dependencies]
dev = [
    # For generating an installable package and deploying
    "setuptools",
    "wheel",
    "twine",
    # For static code checks
    "astroid",
    "coverage",
    "pylint>=3.0",
    "mypy",
    # For generating documentation
    "sphinx",
    "sphinx_rtd_theme",
    # version bump
    "bump2version"
]

[project.scripts]
# stable-0-49 scripts
qmi_proc = "qmi.tools.proc:run"
qmi_adbasic_parser = "qmi.utils.adbasic_parser:run"
qmi_adbasic_compiler = "qmi.utils.adbasic_compiler:run"
# tool and instrument scripts
qmi_tool = "bin.qmi_tool:run"
qmi_hdf5_to_mat = "bin.qmi_hdf5_to_mat:run"
qmi_anapico_apsin = "bin.instruments.qmi_anapico_apsin:run"
qmi_highfinesse_ws = "bin.instruments.qmi_highfinesse_ws:run"
qmi_mcc_usb1808x = "bin.instruments.qmi_mcc_usb1808x:run"
qmi_newport_ag_uc8 = "bin.instruments.qmi_newport_ag_uc8:run"
qmi_quantum_composer_9530 = "bin.instruments.qmi_quantum_composer_9530:run"
qmi_siglent_ssa3000x = "bin.instruments.qmi_siglent_ssa3000x:run"
qmi_srs_dc205 = "bin.instruments.qmi_srs_dc205:run"
qmi_tenma_72psu = "bin.instruments.qmi_tenma_72psu:run"
qmi_teraxion_tfn = "bin.instruments.qmi_teraxion_tfn:run"
qmi_thorlabs_k10cr1 = "bin.instruments.qmi_thorlabs_k10cr1:run"
qmi_timebase_dim3000 = "bin.instruments.qmi_timebase_dim3000:run"
qmi_wavelength_tclab = "bin.instruments.qmi_wavelength_tclab:run"
qmi_wieserlabs_flexdds = "bin.instruments.qmi_wieserlabs_flexdds:run"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
qmi = ["py.typed"]
"qmi.instruments.zurich_instruments" = ["hdawg_command_table.schema"]
